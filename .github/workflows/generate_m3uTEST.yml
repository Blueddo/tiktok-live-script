name: Δημιουργία M3U και προσθήκη σε δημόσιο αποθετήριο
# Ορισμός Χρονοδιαγράμματος και Χειροκίνητης Εκτέλεσης
on:
  schedule:
    - cron: "0 * * * *"  # Εκτέλεση κάθε ώρα στις :00 
    - cron: "30 * * * *"  # Εκτέλεση κάθε μισή ώρα στις :30
  workflow_dispatch: # Επιτρέπει την εκτέλεση του workflow χειροκίνητα από το GitHub UI

jobs: # Δημιουργία της Εργασίας
  generate_m3u:
    runs-on: ubuntu-latest # Χρήση μεγαλύτερου runner για βελτιωμένη απόδοση
    steps:
      - name: Έλεγχος των Εναπομεινάντων Λεπτών για τα Προφίλ
        id: check_minutes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Πρώτο προφίλ:
          ALT_GH_TOKEN: ${{ secrets.ALT_GITHUB_TOKEN }} # Δεύτερο προφίλ
          # Αν το πρώτο προφίλ έχει φτάσει το όριο, χρησιμοποιείται το δεύτερο προφίλ
        run: |
          primary_remaining_minutes=$(gh api /rate_limit | jq .rate.remaining)
          echo "Κύρια εναπομείναντα λεπτά: $primary_remaining_minutes"
          alternate_remaining_minutes=$(GH_TOKEN=${{ secrets.ALT_GITHUB_TOKEN }} gh api /rate_limit | jq .rate.remaining)
          echo "Εναλλακτικά εναπομείναντα λεπτά: $alternate_remaining_minutes"
          
          if [ "$primary_remaining_minutes" -ge 2000 ] && [ "$alternate_remaining_minutes" -ge 2000 ]; then
            echo "Και τα δύο προφίλ έχουν φτάσει το όριο των 2000 λεπτών"
            echo "Απενεργοποίηση και των δύο προφίλ"
            # Εδώ βάζουμε τις εντολές για απενεργοποίηση και των δύο προφίλ
            exit 1  # Έξοδος με κωδικό σφάλματος για να σταματήσει το workflow
          elif [ "$primary_remaining_minutes" -ge 2000 ]; then
            echo "Χρήση εναλλακτικού προφίλ"
            echo "switch_profile=true" >> $GITHUB_ENV
            echo "Απενεργοποίηση κύριου προφίλ"
            # Εδώ βάζουμε την εντολή για απενεργοποίηση του κύριου προφίλ
          else
            echo "Χρήση κύριου προφίλ"
            echo "switch_profile=false" >> $GITHUB_ENV
            echo "Απενεργοποίηση εναλλακτικού προφίλ"
            # Εδώ βάζουμε την εντολή για απενεργοποίηση του εναλλακτικού προφίλ

      - name: Έλεγχος αποθετηρίου και προετοιμασία περιβάλλοντος
        uses: actions/checkout@v4
        
      - name: Πακέτα cache και ρύθμιση Python
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Ρύθμιση Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Εγκατάσταση εξαρτήσεων και εκτέλεση σενάριου
        run: |
          python -m pip install --upgrade pip &
          pip install -r requirements.txt &
          wait
          python generate_m3u.py

      - name: Δέσμευση και προώθηση των αλλαγών στο δημόσιο αποθετήριο
        run: |
          git clone https://github.com/Blueddo/Bluelist.git public_repo
          cd public_repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          cp ../tiktok_live.m3u tiktok_live.m3u
          git add tiktok_live.m3u
          git commit -m 'Update M3U playlist'
          if [ "${{ env.switch_profile }}" == "true" ]; then
            git push https://Blueddo:${{ secrets.PUBLIC_REPO_PAT_ALT }}@github.com/Blueddo/Bluelist.git
          else
            git push https://Blueddo:${{ secrets.PUBLIC_REPO_PAT }}@github.com/Blueddo/Bluelist.git
          fi
        env:
          PUBLIC_REPO_PAT: ${{ secrets.PUBLIC_REPO_PAT }}
          PUBLIC_REPO_PAT_ALT: ${{ secrets.PUBLIC_REPO_PAT_ALT }}
