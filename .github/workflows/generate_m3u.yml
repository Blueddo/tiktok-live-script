name: Δημιουργία M3U και προσθήκη σε δημόσιο αποθετήριο
# Αυτό το workflow υποστηρίζει:
# - προγραμματισμένες εκτελέσεις (cron κάθε :00 και :30) που πάντα τρέχουν το generate (τοπικό generate_m3u.py)
# - χειροκίνητο run (Actions → Run workflow) με επιλογή mode:
#     * workflow  -> κάνει dispatch το workflow generate_m3u.yml (API)
#     * script    -> τρέχει το generate_m3u.py που υπάρχει στο repo (προεπιλογή)
#     * tests     -> τρέχει τα tests από τον φάκελο tests
on:
  schedule:
    - cron: "0 * * * *"
    - cron: "30 * * * *"
  workflow_dispatch:
    inputs:
      mode:
        description: 'Επίλεξε: workflow (dispatch generate_m3u.yml) | script (τρέξε το generate_m3u.py) | tests (τρέξε pytest)'
        required: true
        default: 'script'
      ref:
        description: 'Το git ref (branch/tag) για dispatch όταν mode=workflow'
        required: false
        default: 'main'

jobs:
  generate_m3u:
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'script')
    runs-on: ubuntu-latest
    steps:
      - name: Install gh and jq (used by the script for rate checks)
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run generate_m3u.py (local)
        run: |
          python generate_m3u.py

      - name: Show output file
        run: |
          ls -la
          test -f tiktok_live.m3u && echo "tiktok_live.m3u produced" || echo "no m3u produced"

      - name: Commit & push to public repo (Bluelist)
        env:
          PUBLIC_REPO_PAT: ${{ secrets.PUBLIC_REPO_PAT }}
          PUBLIC_REPO_PAT_ALT: ${{ secrets.PUBLIC_REPO_PAT_ALT }}
        run: |
          git clone https://github.com/Blueddo/Bluelist.git public_repo
          cd public_repo
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          cp ../tiktok_live.m3u tiktok_live.m3u || true
          git add tiktok_live.m3u
          git commit -m 'Update M3U playlist' || echo "No changes to commit"
          if [ "${{ env.switch_profile }}" = "true" ]; then
            git push https://Blueddo:${PUBLIC_REPO_PAT_ALT}@github.com/Blueddo/Bluelist.git || echo "Push failed"
          else
            git push https://Blueddo:${PUBLIC_REPO_PAT}@github.com/Blueddo/Bluelist.git || echo "Push failed"
          fi

  dispatch_workflow:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'workflow'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger generate_m3u.yml workflow via API
        env:
          DISPATCH_PAT: ${{ secrets.DISPATCH_PAT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_WORKFLOW: "generate_m3u.yml"
          TARGET_REF: ${{ github.event.inputs.ref || 'main' }}
        run: |
          TOKEN="${DISPATCH_PAT:-$GITHUB_TOKEN}"
          if [ -z "$TOKEN" ]; then
            echo "No token available for dispatch. Add a secret named DISPATCH_PAT or ensure GITHUB_TOKEN is present."
            exit 1
          fi
          curl -sS -X POST \
            -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${TARGET_WORKFLOW}/dispatches" \
            -d "{\"ref\":\"${TARGET_REF}\"}" \
            || (echo "dispatch request failed" && exit 1)
          echo "Dispatch request sent."

  run_tests:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'tests'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir pytest

      - name: Run tests
        run: |
          pytest -q tests
