name: Δημιουργία M3U και προσθήκη σε δημόσιο αποθετήριο
# Δημιουργία M3U και προσθήκη σε δημόσιο αποθετήριο
on:
  schedule:
    - cron: "0 * * * *"  # Εκτέλεση κάθε ώρα στις :00 
    - cron: "30 * * * *"  # Εκτέλεση κάθε μισή ώρα στις :30
  workflow_dispatch: # Επιτρέπει την εκτέλεση του workflow χειροκίνητα από το GitHub UI

jobs:
  check_minutes:
    runs-on: ubuntu-latest
    outputs:
      switch_profile: ${{ steps.check_minutes.outputs.switch_profile }}
    steps:
      - name: Ελέγξτε τα εναπομείναντα λεπτά για το πρωτεύον προφίλ
        id: check_minutes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          remaining_minutes=$(gh api /rate_limit | jq .rate.remaining)
          echo "Remaining minutes: $remaining_minutes"
          if [ "$remaining_minutes" -lt 2000 ]; then
            echo "switch_profile=true" >> $GITHUB_ENV
          else
            echo "switch_profile=false" >> $GITHUB_ENV
          fi
        
  generate_m3u:
    runs-on: ubuntu-20.04-large # Χρήση μεγαλύτερου runner για βελτιωμένη απόδοση
    needs: check_minutes
    if: ${{ needs.check_minutes.outputs.switch_profile }} == 'false'
    steps:
      - name: Έλεγχος αποθετηρίου
        uses: actions/checkout@v4

      - name: Πακέτα cache Python
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Ρύθμιση Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Χρησιμοποίησε την έκδοση Python που χρειάζεται το σκριπτ σου

      - name: Εγκατάσταση εξαρτήσεων
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Εκτέλεση σενάριου generate_m3u.py
        run: |
          python generate_m3u.py

      - name: Εμφάνιση περιεχομένων τρέχοντος καταλόγου
        run: |
         ls -la

      - name: Δέσμευση και προώθηση των αλλαγών στο δημόσιο αποθετήριο
        run: |
          git clone https://github.com/Blueddo/Bluelist.git public_repo
          cp tiktok_live.m3u public_repo/tiktok_live.m3u
          cd public_repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add tiktok_live.m3u
          git commit -m 'Update M3U playlist'
          git push https://Blueddo:${{ secrets.PUBLIC_REPO_PAT }}@github.com/Blueddo/Bluelist.git
        env:
          PUBLIC_REPO_PAT: ${{ secrets.PUBLIC_REPO_PAT }}

  generate_m3u_alt:
    runs-on: ubuntu-20.04-large # Χρήση μεγαλύτερου runner για βελτιωμένη απόδοση
    needs: check_minutes
    if: ${{ needs.check_minutes.outputs.switch_profile }} == 'true'
    steps:
      - name: Έλεγχος αποθετηρίου
        uses: actions/checkout@v4

      - name: Πακέτα cache Python
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Ρύθμιση Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Εγκατάσταση εξαρτήσεων
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Εκτέλεση σενάριου generate_m3u.py
        run: |
          python generate_m3u.py

      - name: Εμφάνιση περιεχομένων τρέχοντος καταλόγου
        run: |
         ls -la

      - name: Δέσμευση και προώθηση των αλλαγών στο δημόσιο αποθετήριο
        run: |
          git clone https://github.com/Blueddo2/Bluelist.git public_repo
          cp tiktok_live.m3u public_repo/tiktok_live.m3u
          cd public_repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add tiktok_live.m3u
          git commit -m 'Update M3U playlist'
          git push https://Blueddo2:${{ secrets.PUBLIC_REPO_PAT_ALT }}@github.com/Blueddo2/Bluelist.git
        env:
          PUBLIC_REPO_PAT_ALT: ${{ secrets.PUBLIC_REPO_PAT_ALT }}

  stale_issues:
    runs-on: ubuntu-latest
    steps:
      - name: Σήμανση ανενεργών issues και pull requests
        uses: actions/stale@v7
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          stale-issue-message: 'This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs.'
          stale-pr-message: 'This pull request has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs.'
          days-before-stale: 30
          days-before-close: 7
