name: Δημιουργία M3U και προσθήκη σε δημόσιο αποθετήριο
# Το workflow θα τρέχει αυτόματα κάθε ώρα και κάθε μισή ώρα
# και επίσης θα επιτρέπει χειροκίνητη εκτέλεση με επιλογή mode: generate ή tests.
on:
  schedule:
    - cron: "0 * * * *"   # κάθε ώρα στις :00
    - cron: "30 * * * *"  # κάθε μισή ώρα στις :30
  workflow_dispatch:
    inputs:
      mode:
        description: 'Επίλεξε τι θα τρέξει: "generate" για M3U ή "tests" για τα tests'
        required: true
        default: 'generate'

jobs:
  generate_m3u:
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'generate')
    runs-on: ubuntu-latest
    steps:
      - name: Εγκατάσταση gh και jq (απαραίτητο για το check_minutes)
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq

      - name: Ελέγξτε τα εναπομείναντα λεπτά για τα προφίλ
        id: check_minutes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALT_GH_TOKEN: ${{ secrets.ALT_GITHUB_TOKEN }}
        run: |
          primary_remaining_minutes=$(gh api /rate_limit | jq .rate.remaining)
          echo "Primary remaining minutes: $primary_remaining_minutes"
          alternate_remaining_minutes=$(GH_TOKEN=${{ secrets.ALT_GITHUB_TOKEN }} gh api /rate_limit | jq .rate.remaining)
          echo "Alternate remaining minutes: $alternate_remaining_minutes"
          
          if [ "$primary_remaining_minutes" -ge 2000 ] && [ "$alternate_remaining_minutes" -ge 2000 ]; then
            echo "Both profiles have reached the 2000 minutes limit"
            exit 1  # Σταματάει το workflow αν και τα δύο προφίλ έχουν ξεπεράσει το όριο
          elif [ "$primary_remaining_minutes" -ge 2000 ]; then
            echo "Using alternate profile"
            echo "switch_profile=true" >> $GITHUB_ENV
          else
            echo "Using primary profile"
            echo "switch_profile=false" >> $GITHUB_ENV
          fi

      - name: Έλεγχος αποθετηρίου
        uses: actions/checkout@v4

      - name: Πακέτα cache Python
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Ρύθμιση Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Εγκατάσταση εξαρτήσεων
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Εκτέλεση σενάριου generate_m3u.py
        run: |
          python generate_m3u.py

      - name: Εμφάνιση περιεχομένων τρέχοντος καταλόγου
        run: |
          ls -la

      - name: Δέσμευση και προώθηση των αλλαγών στο δημόσιο αποθετήριο
        run: |
          git clone https://github.com/Blueddo/Bluelist.git public_repo
          cd public_repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          cp ../tiktok_live.m3u tiktok_live.m3u
          git add tiktok_live.m3u
          git commit -m 'Update M3U playlist' || echo "No changes to commit"
          if [ "${{ env.switch_profile }}" == "true" ]; then
            git push https://Blueddo:${{ secrets.PUBLIC_REPO_PAT_ALT }}@github.com/Blueddo/Bluelist.git
          else
            git push https://Blueddo:${{ secrets.PUBLIC_REPO_PAT }}@github.com/Blueddo/Bluelist.git
          fi
        env:
          PUBLIC_REPO_PAT: ${{ secrets.PUBLIC_REPO_PAT }}
          PUBLIC_REPO_PAT_ALT: ${{ secrets.PUBLIC_REPO_PAT_ALT }}

  run_tests:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.mode == 'tests'
    runs-on: ubuntu-latest
    steps:
      - name: Έλεγχος αποθετηρίου
        uses: actions/checkout@v4

      - name: Ρύθμιση Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Εγκατάσταση εξαρτήσεων για tests
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir pytest

      - name: Τρέξιμο tests
        run: |
          pytest -q tests
