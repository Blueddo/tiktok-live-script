name: Δημιουργία M3U και προσθήκη σε δημόσιο αποθετήριο
# Δημιουργία M3U και προσθήκη σε δημόσιο αποθετήριο
on:
  schedule:
    - cron: "0 * * * *"  # Εκτέλεση κάθε ώρα στις :00 
    - cron: "30 * * * *"  # Εκτέλεση κάθε μισή ώρα στις :30
  workflow_dispatch: # Επιτρέπει την εκτέλεση του workflow χειροκίνητα από το GitHub UI

jobs:
  generate_m3u:
    runs-on: ubuntu-latest # Χρήση μεγαλύτερου runner για βελτιωμένη απόδοση
    steps:
      - name: Έναρξη χρονομέτρησης για check_minutes
        run: echo "Start time for check_minutes: $(date +%s)" | tee start_check_minutes.txt

      - name: Ελέγξτε τα εναπομείναντα λεπτά για τα προφίλ
        id: check_minutes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALT_GH_TOKEN: ${{ secrets.ALT_GITHUB_TOKEN }}
        run: |
          primary_remaining_minutes=$(gh api /rate_limit | jq .rate.remaining)
          echo "Primary remaining minutes: $primary_remaining_minutes"
          alternate_remaining_minutes=$(GH_TOKEN=${{ secrets.ALT_GITHUB_TOKEN }} gh api /rate_limit | jq .rate.remaining)
          echo "Alternate remaining minutes: $alternate_remaining_minutes"
          
          if [ "$primary_remaining_minutes" -ge 2000 ] && [ "$alternate_remaining_minutes" -ge 2000 ]; then
            echo "Both profiles have reached the 2000 minutes limit"
            echo "disable_workflow=true" >> $GITHUB_ENV
          elif [ "$primary_remaining_minutes" -ge 2000 ]; then
            echo "Using alternate profile"
            echo "switch_profile=true" >> $GITHUB_ENV
          else
            echo "Using primary profile"
            echo "switch_profile=false" >> $GITHUB_ENV
          fi

      - name: Λήξη χρονομέτρησης για check_minutes
        run: echo "End time for check_minutes: $(date +%s)" | tee end_check_minutes.txt

      - name: Έναρξη χρονομέτρησης για setup_python
        run: echo "Start time for setup_python: $(date +%s)" | tee start_setup_python.txt

      - name: Ρύθμιση και εγκατάσταση Python
        if: env.disable_workflow != 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' # Χρησιμοποίησε την έκδοση Python που χρειάζεται το σκριπτ σου

      - name: Λήξη χρονομέτρησης για setup_python
        run: echo "End time for setup_python: $(date +%s)" | tee end_setup_python.txt

      - name: Έναρξη χρονομέτρησης για checkout
        run: echo "Start time for checkout: $(date +%s)" | tee start_checkout.txt

      - name: Έλεγχος αποθετηρίου
        if: env.disable_workflow != 'true'
        uses: actions/checkout@v4

      - name: Λήξη χρονομέτρησης για checkout
        run: echo "End time for checkout: $(date +%s)" | tee end_checkout.txt

      - name: Έναρξη χρονομέτρησης για cache
        run: echo "Start time for cache: $(date +%s)" | tee start_cache.txt

      - name: Πακέτα cache Python
        if: env.disable_workflow != 'true'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Λήξη χρονομέτρησης για cache
        run: echo "End time for cache: $(date +%s)" | tee end_cache.txt

      - name: Έναρξη χρονομέτρησης για install_dependencies
        run: echo "Start time for install_dependencies: $(date +%s)" | tee start_install_dependencies.txt

      - name: Εγκατάσταση εξαρτήσεων
        if: env.disable_workflow != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Λήξη χρονομέτρησης για install_dependencies
        run: echo "End time for install_dependencies: $(date +%s)" | tee end_install_dependencies.txt

      - name: Έναρξη χρονομέτρησης για run_script
        run: echo "Start time for run_script: $(date +%s)" | tee start_run_script.txt

      - name: Εκτέλεση σενάριου generate_m3u.py
        if: env.disable_workflow != 'true'
        run: python generate_m3u.py

      - name: Λήξη χρονομέτρησης για run_script
        run: echo "End time for run_script: $(date +%s)" | tee end_run_script.txt

      - name: Έναρξη χρονομέτρησης για commit_and_push
        run: echo "Start time for commit_and_push: $(date +%s)" | tee start_commit_and_push.txt

      - name: Δέσμευση και προώθηση των αλλαγών στο δημόσιο αποθετήριο
        if: env.disable_workflow != 'true'
        run: |
          git clone https://github.com/Blueddo/Bluelist.git public_repo
          cd public_repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          cp ../tiktok_live.m3u tiktok_live.m3u
          git add tiktok_live.m3u
          git commit -m 'Update M3U playlist'
          if [ "${{ env.switch_profile }}" == "true" ]; then
            git push https://Blueddo:${{ secrets.PUBLIC_REPO_PAT_ALT }}@github.com/Blueddo/Bluelist.git
          else
            git push https://Blueddo:${{ secrets.PUBLIC_REPO_PAT }}@github.com/Blueddo/Bluelist.git
          fi
        env:
          PUBLIC_REPO_PAT: ${{ secrets.PUBLIC_REPO_PAT }}
          PUBLIC_REPO_PAT_ALT: ${{ secrets.PUBLIC_REPO_PAT_ALT }}

      - name: Λήξη χρονομέτρησης για commit_and_push
        run: echo "End time for commit_and_push: $(date +%s)" | tee end_commit_and_push.txt
